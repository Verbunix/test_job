<?php

	//Обьявим переменные для примера
	$my_array = array(5, 5, 1, 7, 2, 3, 5); //$a
	$x_etalon = 5; //$x

	function split_array($a, $x) {
		
		//Обьявим счетчики сравнения с эталоном $x
		$equal = 0;
		$not_equal = 0;
		
		$len = count($a); //Считаем кол-во элементов в массиве $a 
		
		//Простая проверка переданных значений
		if ((isset($a) == true) && ($len >= 1)) {
			//echo "Массив задан, можно работать \n";
			
			$i = 0; //Указатель возможного порядкового номера $K с начала массива $a
			$j = $len - 1; //Указатель возможного порядкового номера $K с конца массива $a
			
			//Начтем проверять каждый элемент массива на эквивалентность его эталону $x
			while ($i <= $j) {
				//Начнем проверять "хитро" каждый элемент массива $a
				//Проверять будем с начала в том случае если выполнится одно из условий:
				//1) Значений равных искомому $x в массиве $a нет
				//2) Количество значений равных $x в массиве с левой стороны меньше или равно
				//количеству значений не равных $x в массиве с правой стороны
				//Если условия не выполняются - проверяем с конца массива и двигаемся к его "середине".
				if (($equal <= $not_equal) or ($equal == 0)) {
					if ($a[$i] == $x) {
						$equal++;
					}
					$i++;
				} else {
					if ($a[$j] <> $x) {
						$not_equal++;
					}
					$j--;
				}
			}
			
			//Сделаем проверку существования решения.
			//1) Кол-во элементов, в массиве $a, равных эталону в левой части должно быть еквивалентно кол-ву элементов не равных эталону в правой части
			//2) Элементы массива $a равные эталону $x должны существовать
			//3) Элемент масива $a[$k] не должен быть эквивалентен эталону $x
			//4) Если получилось так что элемент массива $a[$k] равен $x - сместимся влево, с условие что предыдущие правила выполяются
			//В противном случае решения нет.
			if (($equal == $not_equal) && ($equal > 0) && ($a[$i] <> $x)) {
				$k = $i;
			} elseif (($equal == $not_equal) && ($equal > 0) && ($a[$i-1] <> $x) && ($i-1 > 1 )) {
				$k = $i - 1;
			} else {
				echo "Решения в данной ситуации нет" . "\n";
				$k = -1;
			}

			return ($k);
		
		} else {
			echo "Значения переданные функции \split_array() не верные или выходят за рамки разрешенных";
			$k = -1;
			return ($k);
		}
		
	}
	
	$rez = split_array($my_array, $x_etalon);
	
	echo "Исходный массив \$a:\n" ."[ ". implode(" ; ", $my_array) . " ]" . "\n";
	echo "Эталон для поиска \$x:\t" . $x_etalon . "\n";
	echo "Кол-во элементов в массиве \$a:\t" . count($my_array) . "\n";
	echo "Результат работы функции split_array:\t" . $rez . "\n";


?>
